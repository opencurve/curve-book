"use strict";(self.webpackChunkcurve_book=self.webpackChunkcurve_book||[]).push([[9118],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=n.createContext({}),u=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(i.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),f=s,m=c["".concat(i,".").concat(f)]||c[f]||d[f]||a;return t?n.createElement(m,l(l({ref:r},p),{},{components:t})):n.createElement(m,l({ref:r},p))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,l=new Array(a);l[0]=f;var o={};for(var i in r)hasOwnProperty.call(r,i)&&(o[i]=r[i]);o.originalType=e,o[c]="string"==typeof e?e:s,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1950:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var n=t(7462),s=(t(7294),t(3905));const a={},l="localsnapshotclone tools api",o={unversionedId:"CurveBS/interface/localsnapshotclone_tools_api",id:"CurveBS/interface/localsnapshotclone_tools_api",title:"localsnapshotclone tools api",description:"\u672c\u5730\u5feb\u7167\u548c\u514b\u9686\u91c7\u7528tools-v2\u5de5\u5177\u547d\u4ee4\u884c\u65b9\u5f0f\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a",source:"@site/docs/02-CurveBS/08-interface/03-localsnapshotclone_tools_api.md",sourceDirName:"02-CurveBS/08-interface",slug:"/CurveBS/interface/localsnapshotclone_tools_api",permalink:"/CurveBS/interface/localsnapshotclone_tools_api",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"localsnapshotclone restful api",permalink:"/CurveBS/interface/localsnapshotclone_restful_api"},next:{title:"Curve\u6587\u4ef6\u5b58\u50a8",permalink:"/category/curve\u6587\u4ef6\u5b58\u50a8"}},i={},u=[{value:"\u521b\u5efa\u5feb\u7167\uff1a",id:"\u521b\u5efa\u5feb\u7167",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:5},{value:"\u5220\u9664\u5feb\u7167",id:"\u5220\u9664\u5feb\u7167",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-1",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-1",level:5},{value:"\u5217\u51fa\u5feb\u7167",id:"\u5217\u51fa\u5feb\u7167",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-2",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-2",level:5},{value:"\u4fdd\u62a4\u5feb\u7167",id:"\u4fdd\u62a4\u5feb\u7167",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-3",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-3",level:4},{value:"\u53d6\u6d88\u4fdd\u62a4\u5feb\u7167",id:"\u53d6\u6d88\u4fdd\u62a4\u5feb\u7167",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-4",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-4",level:4},{value:"children",id:"children",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-5",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-5",level:4},{value:"\u514b\u9686\uff1a",id:"\u514b\u9686",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-6",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-6",level:4},{value:"Flatten",id:"flatten",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0-7",level:5},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-7",level:4}],p={toc:u},c="wrapper";function d(e){let{components:r,...t}=e;return(0,s.kt)(c,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"localsnapshotclone-tools-api"},"localsnapshotclone tools api"),(0,s.kt)("p",null,"\u672c\u5730\u5feb\u7167\u548c\u514b\u9686\u91c7\u7528tools-v2\u5de5\u5177\u547d\u4ee4\u884c\u65b9\u5f0f\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a"),(0,s.kt)("h2",{id:"\u521b\u5efa\u5feb\u7167"},"\u521b\u5efa\u5feb\u7167\uff1a"),(0,s.kt)("h5",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a\u5feb\u7167\u3002"),(0,s.kt)("h5",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs create snapshot [flags]\n\ncreate snapshot for file in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snap file path, like: {file-path}@{snap-name}[required]\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs create snapshot --snappath /test0@snap0 --user curve\n')),(0,s.kt)("h2",{id:"\u5220\u9664\u5feb\u7167"},"\u5220\u9664\u5feb\u7167"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-1"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u5220\u9664\u4e00\u4e2a\u5feb\u7167\u3002"),(0,s.kt)("h5",{id:"\u4f7f\u7528\u65b9\u6cd5-1"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs delete snapshot [flags]\n\ndelete snapshot for file in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snap file path, like: {file-path}@{snap-name}[required]\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs delete snapshot --snappath /test0@snap0 --user curve\n')),(0,s.kt)("h2",{id:"\u5217\u51fa\u5feb\u7167"},"\u5217\u51fa\u5feb\u7167"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-2"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u5217\u51fa\u6240\u6709\u5feb\u7167\u3002"),(0,s.kt)("h5",{id:"\u4f7f\u7528\u65b9\u6cd5-2"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs list snapshot [flags]\n\nlist snapshot information for volume in curvebs\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --path string           file path[required]\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs list snapshot --path /test0 --user curve\n')),(0,s.kt)("h2",{id:"\u4fdd\u62a4\u5feb\u7167"},"\u4fdd\u62a4\u5feb\u7167"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-3"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u4fdd\u62a4\u4e00\u4e2a\u5feb\u7167, \u7528\u4e8e\u514b\u9686"),(0,s.kt)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5-3"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs protect [flags]\n\nprotect snapshot in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snap file path, like: {file-path}@{snap-name}[required]\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs protect --snappath /test0@snap0 --user curve\n')),(0,s.kt)("h2",{id:"\u53d6\u6d88\u4fdd\u62a4\u5feb\u7167"},"\u53d6\u6d88\u4fdd\u62a4\u5feb\u7167"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-4"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u53d6\u6d88\u4fdd\u62a4\u4e00\u4e2a\u5feb\u7167"),(0,s.kt)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5-4"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs unprotect [flags]\n\nunprotect snapshot in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snap file path, like: {file-path}@{snap-name}[required]\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs unprotect --snappath /test0@snap0 --user curve\n')),(0,s.kt)("h2",{id:"children"},"children"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-5"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u5217\u51fa\u5377\u6216\u8005\u5feb\u7167\u7684\u6240\u6709\u5b50\u5377"),(0,s.kt)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5-5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs children [flags]\n\nlist children of snapshot/volume in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --path string           file or directory path (default "/test")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snapshot file path\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs children --path /test0 --user curve\n$ curve bs children --snappath /test0@snap0 --user curve\n')),(0,s.kt)("h2",{id:"\u514b\u9686"},"\u514b\u9686\uff1a"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-6"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u4ece\u5feb\u7167\u514b\u9686\u4e00\u4e2a\u5b50\u5377"),(0,s.kt)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5-6"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs clone [flags]\n\nclone file in curvebs cluster\n\nFlags:\n      --dstpath string        destiation file path[required]\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --snappath string       snap file path, like: {file-path}@{snap-name}[required]\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs clone --snappath /test0@snap0 --dstpath /test2 --user curve\n')),(0,s.kt)("h2",{id:"flatten"},"Flatten"),(0,s.kt)("h5",{id:"\u63cf\u8ff0-7"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"\u8865\u8db3\u5b50\u5377\u7684\u6570\u636e\uff0c\u4f7f\u5176\u4e0e\u7236\u5377\u548c\u5feb\u7167\u89e3\u8026"),(0,s.kt)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5-7"},"\u4f7f\u7528\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'Usage:  curve bs flatten [flags]\n\nflatten clone file in curvebs cluster\n\nFlags:\n  -f, --format string         output format (json|plain) (default "plain")\n      --mdsaddr string        mds address, should be like 127.0.0.1:6700,127.0.0.1:6701,127.0.0.1:6702\n      --password string       user password (default "root_password")\n      --path string           file path[required]\n      --rpcretrytimes int32   rpc retry times (default 1)\n      --rpctimeout duration   rpc timeout (default 10s)\n      --user string           user name[required]\n\nGlobal Flags:\n  -c, --conf string   config file (default is $HOME/.curve/curve.yaml or /etc/curve/curve.yaml)\n  -h, --help          print help\n      --showerror     display all errors in command\n      --verbose       show some log\n\nExamples:\n$ curve bs flatten --path /test2 --user curve\n')))}d.isMDXComponent=!0}}]);